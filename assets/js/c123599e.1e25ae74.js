"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[2126],{117:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"developers/python/plugin/index","title":"Plugin Style","description":"So you want to provide some functionality for Arkitekt?","source":"@site/docs/developers/python/plugin/index.mdx","sourceDirName":"developers/python/plugin","slug":"/developers/python/plugin/","permalink":"/docs/developers/python/plugin/","draft":false,"unlisted":false,"editUrl":"https://github.com/arkitektio/arkitektio.github.io/edit/master/docs/developers/python/plugin/index.mdx","tags":[],"version":"current","frontMatter":{"id":"index","title":"Plugin Style","sidebar_label":"Plugin Style"},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/docs/developers/python/classical/Usage"},"next":{"title":"On Building your Plugin","permalink":"/docs/developers/python/plugin/build"}}');var r=t(74848),i=t(28453),s=t(86035);const a={id:"index",title:"Plugin Style",sidebar_label:"Plugin Style"},l=void 0,d={},c=[{value:"Creating a new Apps",id:"creating-a-new-apps",level:2},{value:"The .arkitekt folder",id:"the-arkitekt-folder",level:2},{value:"The app.py file",id:"the-apppy-file",level:2},{value:"Interlude",id:"interlude",level:2},{value:"Running your app",id:"running-your-app",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"So you want to provide some functionality for Arkitekt?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"THANK YOU!"})," We are always looking for new Apps and Nodes to be added to the Arkitekt Ecosystem.\nThis guide will help you get started with creating your first App and Node."]}),"\n",(0,r.jsxs)(n.p,{children:["This tutorial assumes you have a basic (really basic) understanding of the command line\nand have arkitekt installed on your computer. If you don't have arkitekt installed, check out the ",(0,r.jsx)(n.a,{href:"/docs/introduction/installation",children:"installation guide"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"creating-a-new-apps",children:"Creating a new Apps"}),"\n",(0,r.jsxs)(n.p,{children:["The integrated Style revolves around the concepts of Apps. So lets create one. Open up your terminal in a ",(0,r.jsx)(n.em,{children:"new folder"}),", where you\nwant to create your new app and run :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"arkitekt init\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This should start an installation wizard, which will guide you through the process of creating a new app and will ask you a few questions\nabout your app. Your ",(0,r.jsx)(n.a,{href:"/docs/design/terminology/manifest",children:"Manifest"}),"."]}),"\n",(0,r.jsx)(s.BK,{src:"/casts/init.cast"}),"\n",(0,r.jsx)("div",{className:"mt-2"}),"\n",(0,r.jsx)(n.p,{children:"A few words about the questions asked in the wizard, no worries you can always change them later."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"App Identifier"})," - This is the name of your app. This should be a unique name, which identifies your app. Think of something cool,\nlike ",(0,r.jsx)(n.code,{children:"stardist"})," or ",(0,r.jsx)(n.code,{children:"kalkulator"}),". It should be something that your users will remember."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"App Description"})," - This is a short description of your app. It should be a short sentence, which describes what your app is best at.\nNo need to describe your functionality here (thats what Nodes are for), but rather why you designed your app."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Scopes"})," - ",(0,r.jsx)(n.a,{href:"/docs/design/security",children:"Scopes"}),", will give your apps certain rights to do things on your behalve ( like accessing your images),\nso you should only give your app the scopes it really needs right now. You can always add more scopes later. These scopes will be also asked\nwhen others will want to install your app. So make sure you only ask for the scopes you really need."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Logo"})," - This is the logo of your app. You can either choose a local path relative to your app folder or a url to an image. The image\nwill be displayed in the (soon to come) app store and when others use your app."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Author"})," - This is the author of your app. This can be your name or the name of your company. By default it will use your username, but you can\nchange it to whatever you want."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Once you are done, you should see a new folder called ",(0,r.jsx)(n.code,{children:".arkitekt"})," in your current directory. As well as a new file called ",(0,r.jsx)(n.code,{children:"app.py"}),".\nThese are the main files that make your app. Lets inspect them both."]}),"\n",(0,r.jsx)(n.h2,{id:"the-arkitekt-folder",children:"The .arkitekt folder"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".arkitekt"})," folder contains all the configuration files for your app. It will grow some more files once you build and publish your app,\nbut for now it should only contain a file called ",(0,r.jsx)(n.code,{children:"manifest.yaml"}),", the ",(0,r.jsx)(n.a,{href:"/docs/design/terminology/manifest",children:"Manifest"})," of your app. Once you delete your\n",(0,r.jsx)(n.code,{children:".arkitekt"})," folder, your app will be gone. So make sure you don't do that !"]}),"\n",(0,r.jsx)(n.h2,{id:"the-apppy-file",children:"The app.py file"}),"\n",(0,r.jsxs)(n.p,{children:["This is the main file of your app. And the entrypoint that the CLI will call when running your App.\nIt is a python file, that contains all the ",(0,r.jsx)(n.a,{href:"/docs/design/terminology/node",children:"Nodes"})," of your app. Lets open it up"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from arkitekt import register\n\n@register\ndef hello_world(name: str) -> str:\n    """Hello World\n\n    This is a simple Hello World Node, that will greet you by your name.\n    and print it to the console.\n\n    Args:\n        name (str): Your name\n\n    Returns:\n        str: A greeting\n    """\n    greeting = f"Hello {name}"\n    print(greeting)\n    return greeting\n'})}),"\n",(0,r.jsxs)(n.p,{children:['This is the default code that is generated for you. It contains a single function that defines and implement the\n"Hello World" Node ',(0,r.jsx)(n.a,{href:"/docs/design/terminology/node",children:"Node"}),". Its pretty straigtforward but lets break it down:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from arkitekt import register\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This is defining import that make this python code an Arkitekt. ",(0,r.jsx)(n.code,{children:"register"})," is a decorator that can mark any function in your app, as a Node.\nYou can have as many Nodes as you want in your app, and once you run your app, they will become available on the Arkitekt Server and\ncan be used by others."]}),"\n",(0,r.jsx)(n.p,{children:"Lets do just that, lets run our app."}),"\n",(0,r.jsx)(n.h2,{id:"interlude",children:"Interlude"}),"\n",(0,r.jsxs)(n.p,{children:["Before we can run our app, we will need to start our Arkitekt Server and make sure our app can connect to it. Please make sure you installed\nan Arkitekt Server and have it running. For strategies of how to do that, check out the ",(0,r.jsx)(n.a,{href:"/docs/introduction/installation",children:"installation guide"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"running-your-app",children:"Running your app"}),"\n",(0,r.jsx)(n.p,{children:"Open up your terminal and run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"arkitekt run dev --url localhost:8000\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will start your app in development mode and connect it to your local Arkitekt Server. You should see something like this:"}),"\n",(0,r.jsx)(s.BK,{src:"/casts/init.cast"}),"\n",(0,r.jsx)("div",{className:"mt-6<"}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["If you are running your Arkitekt Server on a different port or host, you will need to change the ",(0,r.jsx)(n.code,{children:"--url"})," parameter accordingly.\nYou don't need to specify any protocol, as the CLI will try to autodetect it. If you omit the ",(0,r.jsx)(n.code,{children:"--url"})," parameter, it will default to ",(0,r.jsx)(n.code,{children:"localhost:8000"}),"\nthe default port of the Arkitekt Server."]})}),"\n",(0,r.jsx)(n.p,{children:"And thats is. Your app is now running and you can start using it. Lets try it out.\nFor that we can open up the Orkestrator App and reserve our app. And that's it\nYou can now start using your app. Lets try it out."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(96540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}},86035:(e,n,t)=>{t.d(n,{BK:()=>a});var o=t(96540),r=t(29813),i=t(74848);const s=({src:e,autoPlay:n=!0,speed:r=1.5,...s})=>{const a=(0,o.useRef)(null),[l,d]=(0,o.useState)();return(0,o.useEffect)((()=>{t.e(6636).then(t.bind(t,56636)).then((e=>{d(e)}))}),[]),(0,o.useEffect)((()=>{const t=a.current;console.log(e);const o=l?.create(e,t,{autoPlay:n,speed:r,...s});return()=>{o?.dispose()}}),[e,l,s]),(0,i.jsxs)("div",{className:"coding inverse-toggle px-1 py-1 shadow-lg text-gray-100 text-sm  bg-[#121314] rounded-lg leading-normal overflow-hidden",children:[(0,i.jsxs)("div",{className:"top mb-2 mt-1 flex",children:[(0,i.jsx)("div",{className:"h-2 w-2 bg-red-500 rounded-full"}),(0,i.jsx)("div",{className:"ml-2 h-2 w-2 bg-orange-300 rounded-full"}),(0,i.jsx)("div",{className:"ml-2 h-2 w-2 bg-green-500 rounded-full"})]}),(0,i.jsx)("div",{className:"mt-1 w-full",children:(0,i.jsx)("div",{ref:a})})]})},a=e=>(0,i.jsx)(r.A,{fallback:(0,i.jsx)("div",{children:"Hallo"}),children:()=>(0,i.jsx)(s,{...e})})}}]);
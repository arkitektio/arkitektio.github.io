"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[8316],{46417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(85893),s=t(11151);const o={id:"assignation",title:"Assignation",sidebar_label:"Assignation",sidebar_position:8},a=void 0,r={id:"design/terminology/assignation",title:"Assignation",description:"Whats is a port?",source:"@site/docs/design/terminology/assignation.mdx",sourceDirName:"design/terminology",slug:"/design/terminology/assignation",permalink:"/docs/design/terminology/assignation",draft:!1,unlisted:!1,editUrl:"https://github.com/arkitektio/arkitektio.github.io/edit/master/docs/design/terminology/assignation.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"assignation",title:"Assignation",sidebar_label:"Assignation",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Apps vs Services",permalink:"/docs/design/terminology/apps-vs-services"},next:{title:"Port",permalink:"/docs/design/terminology/port"}},l={},d=[{value:"Whats is a port?",id:"whats-is-a-port",level:3},{value:"Port Types",id:"port-types",level:3}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"whats-is-a-port",children:"Whats is a port?"}),"\n",(0,i.jsx)(n.p,{children:"A port is concept tightligly related to Nodes and their input and outputs.\nEach nodes has multiple input and output ports."}),"\n",(0,i.jsxs)(n.p,{children:["Ports are defined by a mandatory ",(0,i.jsx)(n.code,{children:"key"})," and a ",(0,i.jsx)(n.code,{children:"type"})," and an optional ",(0,i.jsx)(n.code,{children:"label"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"{\n  key: 'input',\n  type: 'number',\n  label: 'Input'\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"port-types",children:"Port Types"}),"\n",(0,i.jsx)(n.p,{children:"Each port has a type, that defines the type of data that can be passed through it.\nThe following basic types are supported:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"int"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"float"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"structure"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Additionality there are some special types:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"List"})," - A list of values of the same type"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Dict"})," - A key-value pair of values of the same type"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Union"})," - A value that can be one of multiple types"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Importantly Ports always specifie if they expect nullable values or not."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Structure Ports are a bit special. They are used to define non\nserializable data structures, that need to be shrank down to a serializable\nformat, and expanded back to the original format, when passing from\none app to another app."})}),"\n",(0,i.jsx)(n.h2,{id:""})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var i=t(67294);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);
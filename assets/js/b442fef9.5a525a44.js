"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[8110],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=r,y=d["".concat(s,".").concat(h)]||d[h]||c[h]||o;return n?a.createElement(y,i(i({ref:t},p),{},{components:n})):a.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},24933:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>f,frontMatter:()=>u,metadata:()=>d,toc:()=>h});var a=n(87462),r=n(67294),o=n(3905),i=n(10748);const l=e=>{let{src:t,autoPlay:a=!0,speed:o=1.5,...i}=e;const l=(0,r.useRef)(null),[s,u]=(0,r.useState)();return(0,r.useEffect)((()=>{n.e(3911).then(n.bind(n,53911)).then((e=>{u(e)}))}),[]),(0,r.useEffect)((()=>{const e=l.current;console.log(t);const n=s?.create(t,e,{autoPlay:a,speed:o,...i});return()=>{n?.dispose()}}),[t,s,i]),r.createElement("div",{className:"coding inverse-toggle px-1 py-1 shadow-lg text-gray-100 text-sm  bg-[#121314] rounded-lg leading-normal overflow-hidden"},r.createElement("div",{className:"top mb-2 mt-1 flex"},r.createElement("div",{className:"h-2 w-2 bg-red-500 rounded-full"}),r.createElement("div",{className:"ml-2 h-2 w-2 bg-orange-300 rounded-full"}),r.createElement("div",{className:"ml-2 h-2 w-2 bg-green-500 rounded-full"})),r.createElement("div",{className:"mt-1 w-full"},r.createElement("div",{ref:l})))},s=e=>r.createElement(i.Z,{fallback:r.createElement("div",null,"Hallo")},(()=>r.createElement(l,e))),u={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},p="Getting Started",d={unversionedId:"developers/python/functional/getting-started",id:"developers/python/functional/getting-started",title:"Getting Started",description:"So you installed arkitekt and now you want to start using it. This guide will help you get started.",source:"@site/docs/developers/python/functional/usage.mdx",sourceDirName:"developers/python/functional",slug:"/developers/python/functional/getting-started",permalink:"/doks/docs/developers/python/functional/getting-started",draft:!1,editUrl:"https://github.com/jhnnsrs/doks/edit/master/docs/developers/python/functional/usage.mdx",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},sidebar:"tutorialSidebar",previous:{title:"Functional",permalink:"/doks/docs/category/functional"},next:{title:"Installation",permalink:"/doks/docs/developers/python/installation"}},c={},h=[{value:"Lets check things are setup correctly",id:"lets-check-things-are-setup-correctly",level:2},{value:"Creating a new app",id:"creating-a-new-app",level:2},{value:"What just happened?",id:"what-just-happened",level:3},{value:"Why we need a manifest",id:"why-we-need-a-manifest",level:3},{value:"About your name",id:"about-your-name",level:4},{value:"Your apps name",id:"your-apps-name",level:4},{value:"Your version",id:"your-version",level:4},{value:"The entrypoint",id:"the-entrypoint",level:4},{value:"The builder",id:"the-builder",level:4}],y={toc:h},m="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"So you installed arkitekt and now you want to start using it. This guide will help you get started.\nThis tutorial assumes you have a basic (really basic) understanding of the command line\nand have arkitekt installed on your computer."),(0,o.kt)("h2",{id:"lets-check-things-are-setup-correctly"},"Lets check things are setup correctly"),(0,o.kt)("p",null,"Before we start, lets make sure that arkitekt is installed correctly. To do this, we will\nrun the following command."),(0,o.kt)(s,{src:"/doks/casts/johannes.cast",mdxType:"Terminal"}),(0,o.kt)("p",null,"If you dont see the following output, then you need to go back and install arkitekt. If it still\ndoesnt work, then please check out our FAQ or open an issue and\nwe will help you get it working."),(0,o.kt)("h2",{id:"creating-a-new-app"},"Creating a new app"),(0,o.kt)("p",null,"When utilizing arkitekt, you will be working with apps. An app is a collection of functionality\nthat you will be able to expose to your lab members."),(0,o.kt)("p",null,"For example, you might have an app thatallows your lab members to process images in various ways, or to analysis data in a particular\nway."),(0,o.kt)("p",null,"Generally speaking, you will want to create a new folder and a new python project for each application\nyou create. This will make it easier to manage your apps and to keep them separate from each other.\nIt will also make it easier to deploy your apps to users in the future. For this tutorial, we will\ncreate a new folder called ",(0,o.kt)("inlineCode",{parentName:"p"},"myapp")," and then create a new arkitekt project inside of it."),(0,o.kt)(s,{src:"/doks/casts/arkitekt-init.cast",mdxType:"Terminal"}),(0,o.kt)("h3",{id:"what-just-happened"},"What just happened?"),(0,o.kt)("p",null,"When you run the ",(0,o.kt)("inlineCode",{parentName:"p"},"arkitekt init"),' command, arkitekt will ask you a few questions about your app and create\nthe ".arkitekt" folder inside your directory, which containers a manifest about your app.\nand what they will be used for. The CLI will also create an app.py file for you, which will be the entrypoint\nfor your app.'),(0,o.kt)("h3",{id:"why-we-need-a-manifest"},"Why we need a manifest"),(0,o.kt)("p",null,"The manifest is a file that contains information about your app. It contains information about your app,\nsuch as its name, version, and entrypoint. It also contains information about how your app will be built\nand deployed. The manifest is used by arkitekt to build and deploy your app. It is also used by the arkitekt\nweb interface to display information about your app and to allow users to run your app."),(0,o.kt)("h4",{id:"about-your-name"},"About your name"),(0,o.kt)("p",null,"Well this is simple enough. Its just your name. When others will be using your app on your arkitekt they will\nsee your name associated with it, and might be able to contact you if they have questions about your app."),(0,o.kt)("h4",{id:"your-apps-name"},"Your apps name"),(0,o.kt)("p",null,"Arkitekt will ask you a few questions about your app. The first question is the name of your app.\nThis is the name that will be used to identify on the arkitekt web interface. The name ",(0,o.kt)("em",{parentName:"p"},"should")," be\nunique, so if you are creating an app that is similar to an existing app by another user, you might have\nproblems of connecting your apps to the arkitekt web interface. If you are unsure, you can always"),(0,o.kt)("h4",{id:"your-version"},"Your version"),(0,o.kt)("p",null,"Also note that we will ask you for the current version of your app. The version can be used to track changes\nin your code and your deployments. It is recommended that you use ",(0,o.kt)("a",{parentName:"p",href:"https://semver.org/"},"semantic versioning"),"\nbut we are not enforcing it. Versions are optional, but we recommend that you use them, especially if you plan\non deploying your app to users."),(0,o.kt)("h4",{id:"the-entrypoint"},"The entrypoint"),(0,o.kt)("p",null,"The entrypoint is the file that will be used to start your app. This is the file that will contain all of your\nfunctions that you want to register with arkitekt. The entrypoint file should ",(0,o.kt)("strong",{parentName:"p"},"NOT")," contain any code that is being\nexecuted when the file is imported. This is because arkitekt will import your entrypoint file to register your\nfunctions with the arkitekt web interface. If you have code that is being executed when the file is imported, it will\nbe executed every time a user runs your app (or you run in in dev mode). You can however have arbitary code inside\na ",(0,o.kt)("inlineCode",{parentName:"p"},'if __name__ == "__main__":')," block, which will only be executed when the file is run directly."),(0,o.kt)("p",null,"Ok:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'if __name__ == "__main__":\n   print("Hello World") # will only be executed when the file is run directly\n')),(0,o.kt)("p",null,"Not ok:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'print("Hello World") # will be executed every time the file is imported\n')),(0,o.kt)("h4",{id:"the-builder"},"The builder"),(0,o.kt)("p",null,"The builders are functions that will create your arkitekt app. Through defining different builders, you can\nhighly customize how your app is being created, which services it will use and how it connects to your arkitekt instance\nFor example the ",(0,o.kt)("inlineCode",{parentName:"p"},"easy")," builder provides you with a simple way to create a new user-bound app and\nauthenticate itthrough the arkitekt web interface, while the ",(0,o.kt)("inlineCode",{parentName:"p"},"port"),", builder will try to find its configuration from environment variables,\nthat are by default set within port containers. You can read more about the different builders in the builders section.\nAs a default though you don't need to worry about this, and can just use the ",(0,o.kt)("inlineCode",{parentName:"p"},"easy")," builder."))}f.isMDXComponent=!0}}]);
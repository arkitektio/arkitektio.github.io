"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[9717],{93341:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>h,default:()=>f,frontMatter:()=>d,metadata:()=>u,toc:()=>m});var r=i(85893),s=i(11151);const a=i.p+"assets/medias/stream_files-8a2aed5c74f86b11aa55750dc7899f4c.webm",n=i.p+"assets/medias/connect_gucker-cce56240e382ad03cb47b7ecebce75b3.webm";i(67294);var o=i(63750),l=i(89583);const c=e=>{let{children:t}=e;return(0,r.jsxs)("div",{className:"grid grid-cols-3 md:grid-cols-3 gap-4 mb-3 ",children:[(0,r.jsxs)("a",{target:"_blank",className:"p-2 bg-gray-500 rounded px-3 py-2 rounded-lg text-white cursor-not-allowed hover:bg-gray-500 hover:text-white my-auto flex flex-col items-center my-auto ",children:[(0,r.jsx)("div",{className:"my-auto mr-2",children:(0,r.jsx)(l._Aq,{size:"3em"})})," ",(0,r.jsx)("div",{className:"my-auto",children:"Linux"})]}),(0,r.jsxs)("a",{href:"https://github.com/arkitektio-apps/gucker/releases/latest/download/GuckerApp.zip",target:"_blank",className:"bg-primary-300 rounded px-3 py-2 rounded-lg text-white cursor-pointer hover:bg-primary-500 hover:text-white flex flex-col items-center my-auto",children:[(0,r.jsx)("div",{className:"my-auto mr-2",children:(0,r.jsx)(o.L1p,{size:"3em"})})," ",(0,r.jsx)("div",{className:"my-auto",children:"Windows"})]}),(0,r.jsxs)("a",{target:"_blank",className:"bg-gray-500 rounded px-3 py-2 rounded-lg text-white cursor-not-allowed hover:bg-gray-500 hover:text-white my-auto flex flex-col items-center my-auto",children:[(0,r.jsx)("div",{className:"my-auto mr-2",children:(0,r.jsx)(l.oPZ,{size:"3em"})})," ",(0,r.jsx)("div",{className:"my-auto",children:"Mac"})]})]})},d={id:"gucker",title:"Gucker - your file watcher",sidebar_label:"Gucker",sidebar_position:5},h="Gucker",u={id:"apps/standalones/gucker",title:"Gucker - your file watcher",description:'Gucker (from German: "gucken" / to watch) is a file watcher that can be used to watch files and directories for changes and can stream the new files to the',source:"@site/docs/apps/standalones/gucker.mdx",sourceDirName:"apps/standalones",slug:"/apps/standalones/gucker",permalink:"/docs/apps/standalones/gucker",draft:!1,unlisted:!1,editUrl:"https://github.com/arkitektio/arkitektio.github.io/edit/master/docs/apps/standalones/gucker.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"gucker",title:"Gucker - your file watcher",sidebar_label:"Gucker",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"MikroJ (ImageJ)",permalink:"/docs/apps/standalones/mikroj"},next:{title:"Troubleshooting",permalink:"/docs/category/troubleshooting"}},p={},m=[{value:"Idea",id:"idea",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Usage in Arkitekt Workflows",id:"usage-in-arkitekt-workflows",level:2}];function x(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"gucker",children:"Gucker"}),"\n",(0,r.jsx)(t.p,{children:'Gucker (from German: "gucken" / to watch) is a file watcher that can be used to watch files and directories for changes and can stream the new files to the\nArkitekt Server.'}),"\n",(0,r.jsx)(t.h2,{id:"idea",children:"Idea"}),"\n",(0,r.jsx)(t.p,{children:"Gucker was developed to enable directly streaming files that are being produced (by your microscope) to the Arkitekt Server and to directly start the processing\nof the files in a workflow."}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(t.p,{children:["Gucker comes as a bundled application installable from its Github Releases ",(0,r.jsx)(t.a,{href:"https://github.com/arkitektio-apps/gucker/releases/latest",children:"page"}),"."]}),"\n",(0,r.jsx)(c,{}),"\n",(0,r.jsxs)(t.p,{children:["Additionally you can install it via ",(0,r.jsx)(t.code,{children:"pip"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"pip install gucker\n"})}),"\n",(0,r.jsx)(t.admonition,{title:"On Mac support",type:"info",children:(0,r.jsx)(t.p,{children:"Currently we provide no build for the Mac platform, but you can install it via pip on your Mac. We will add a Mac build in the future."})}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.p,{children:"Currently gucker is only available as a GUI while we are working on also enabling\nit as a command line tool. To start the GUI simply run the binary in the extracted folder or run the following command,\nif you installed it via pip:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"gucker\n"})}),"\n",(0,r.jsx)("video",{autoPlay:!0,muted:!0,loop:!0,controls:!0,className:"rounded rounded-md",width:"100%",children:(0,r.jsx)("source",{src:n})}),"\n",(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(t.p,{children:'Gucker requires you to set two directories, the "Import" directory and the "Export" directory.\nThe "Import" directory is the directory that will be watched for changes\nwhile the "Target" directory is the directory where the files will be copied to when you explicitly export them.'}),"\n",(0,r.jsx)(t.h2,{id:"usage-in-arkitekt-workflows",children:"Usage in Arkitekt Workflows"}),"\n",(0,r.jsxs)(t.p,{children:['Guckers main purpose is to establish a "Streaming Node" in Arkitekt workflows, and allows\nyou to directly stream files to the Arkitekt Server and start the processing of the files in a workflow.\nFor this just add the ',(0,r.jsx)(t.code,{children:"Stream Files"})," node to your workflow and configure it to use the Gucker instance,\nthat points to the Folder you want to watch."]}),"\n",(0,r.jsx)(t.p,{children:"Additionally you can also specify some filters to only stream files that match a certain file pattern\nin regexp. Here are some common patterns:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:".*"})," - matches all files"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:".*.tif"})," - matches all tif files"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:".*.czi"})," - matches all czi files"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:".*.nd2"})," - matches all nd2 files"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:".*[.tif|.tiff]"})," - matches all jpg and png files"]}),"\n"]}),"\n",(0,r.jsx)("video",{autoPlay:!0,muted:!0,loop:!0,controls:!0,className:"rounded rounded-md",width:"100%",children:(0,r.jsx)("source",{src:a})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["Regular expressions are a powerful tool to match file patterns, but can also be quite complex.\nWe are recommending to use a tool like ",(0,r.jsx)(t.a,{href:"https://regex101.com/",children:"regex101"})," to test your regular expressions.\nAgainst the files you want to match, if it gets too complex."]})})]})}function f(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>n});var r=i(67294);const s={},a=r.createContext(s);function n(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[2910],{28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(96540);const o={},s=n.createContext(o);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:t},e.children)}},74988:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"design/terminology/reservation","title":"Reservation","description":"What is a Reservation","source":"@site/docs/design/terminology/reservation.mdx","sourceDirName":"design/terminology","slug":"/design/terminology/reservation","permalink":"/docs/design/terminology/reservation","draft":false,"unlisted":false,"editUrl":"https://github.com/arkitektio/arkitektio.github.io/edit/master/docs/design/terminology/reservation.mdx","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"reservation","title":"Reservation","sidebar_label":"Reservation","sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Provision","permalink":"/docs/design/terminology/provision"},"next":{"title":"Why?","permalink":"/docs/design/why"}}');var o=i(74848),s=i(28453);const r={id:"reservation",title:"Reservation",sidebar_label:"Reservation",sidebar_position:8},a=void 0,c={},d=[{value:"What is a Reservation",id:"what-is-a-reservation",level:3},{value:"Reservation as Topic",id:"reservation-as-topic",level:2}];function l(e){const t={h2:"h2",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h3,{id:"what-is-a-reservation",children:"What is a Reservation"}),"\n",(0,o.jsx)(t.p,{children:"A reservation is a booking of a specific Node on Arkitekt. It represents a contract between\nas user (and its app) and arkitekt for the usage of some bioimage task (e.g a segmentation)."}),"\n",(0,o.jsx)(t.p,{children:"Arkitekt tries to uphold the reservation, by adding consuming provisions on the other end."}),"\n",(0,o.jsx)(t.h2,{id:"reservation-as-topic",children:"Reservation as Topic"}),"\n",(0,o.jsx)(t.p,{children:"A reservation in Arkitekt is closely mimic the concepot of a topic in RabbitMQ.\nIt is a message queue that can be consumed by multiple consumers."})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);
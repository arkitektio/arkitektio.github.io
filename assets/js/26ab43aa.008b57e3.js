"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[7884],{48511:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>n,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=a(85893),i=a(11151);a(15944);const o={title:"Why not Kafka?",sidebar_label:"Kafka?",sidebar_position:1},n=void 0,r={id:"design/why-not/kafka",title:"Why not Kafka?",description:"Why not Kafka?",source:"@site/docs/design/why-not/kafka.mdx",sourceDirName:"design/why-not",slug:"/design/why-not/kafka",permalink:"/docs/design/why-not/kafka",draft:!1,unlisted:!1,editUrl:"https://github.com/jhnnsrs/doks/edit/master/docs/design/why-not/kafka.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Why not Kafka?",sidebar_label:"Kafka?",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Why Not ..",permalink:"/docs/design/why-not/"},next:{title:"Rest?",permalink:"/docs/design/why-not/rest"}},d={},l=[{value:"Why not Kafka?",id:"why-not-kafka",level:2},{value:"Kafka",id:"kafka",level:3},{value:"Sounds great, why not use it, why RabbitMQ?",id:"sounds-great-why-not-use-it-why-rabbitmq",level:4},{value:"Complexity",id:"complexity",level:4},{value:"Performance",id:"performance",level:4},{value:"Outlook",id:"outlook",level:3}];function h(e){const t={a:"a",admonition:"admonition",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"why-not-kafka",children:"Why not Kafka?"}),"\n",(0,s.jsx)(t.p,{children:"Arkitekt aims to be a platform, that allows for real-time data processing. For this it neeeds a messaging system, and comes with RabbitMQ out of the box. But why not Kafka? Let's have a look at the differences between the two\nand why Arkitekt chose RabbitMQ."}),"\n",(0,s.jsx)(t.h3,{id:"kafka",children:"Kafka"}),"\n",(0,s.jsx)(t.p,{children:"Kafka is a distributed streaming platform, that is used for building real-time data pipelines and streaming apps. It is a distributed, partitioned, replicated commit log service.\nIt provides the functionality of a messaging system, but can keep the data for a longer time, and is optimized for high throughput. It is often used for building real-time data pipelines and streaming apps."}),"\n",(0,s.jsx)(t.h4,{id:"sounds-great-why-not-use-it-why-rabbitmq",children:"Sounds great, why not use it, why RabbitMQ?"}),"\n",(0,s.jsx)(t.p,{children:"Kafka is a great tool, but it is not the best fit for every use case. It is optimized for high throughput in distributed settings and is powering the real-time data pipelines of many gigantous companies.\nSo why did Arkitekt choose RabbitMQ?"}),"\n",(0,s.jsx)(t.h4,{id:"complexity",children:"Complexity"}),"\n",(0,s.jsx)(t.p,{children:"Kafka is a complex system to setup and maintain. It comes only configurable as a distributed system, and requires multiple instances of the broker to be running.\nThis makes it hard to setup and maintain for small projects, especially if you are just trying to set it up on your local machine. RabbitMQ is much easier to setup and maintain, and is a better fit for small projects."}),"\n",(0,s.jsx)(t.h4,{id:"performance",children:"Performance"}),"\n",(0,s.jsxs)(t.p,{children:["Kafka is optimized for high ",(0,s.jsx)(t.strong,{children:"throughput"}),", but this comes at a cost. If you are looking for low ",(0,s.jsx)(t.strong,{children:"latency"}),", RabbitMQ can achieve lower latencies than Kafka.\nYou can find more about this ",(0,s.jsx)(t.a,{href:"https://double.cloud/blog/posts/2023/03/apache-kafka-vs-rabbitmq/",children:"here"}),". We wanted to provide very low message latencies, as in\nbiology the time between the stimulus and the response is very short. This is why we chose RabbitMQ."]}),"\n",(0,s.jsx)(t.admonition,{title:"On Message Size",type:"note",children:(0,s.jsx)(t.p,{children:"RabbitMQ is also better suited for small message sizes, as it has a lower overhead than Kafka. This is important for Arkitekt, as the messages are often very small because\nwe pass only message IDs and not the whole message. This is because the messages are stored in a database, and we only need to pass the ID of the message to the next service."})}),"\n",(0,s.jsx)(t.h3,{id:"outlook",children:"Outlook"}),"\n",(0,s.jsxs)(t.p,{children:["It is important to note that Arkitekt is still in development, and we are always looking for ways to improve the platform. We are looking into adding support for Kafka in the future,\nas it is a great tool for real-time data processing in larger scale projects. We are currently reworking ",(0,s.jsx)(t.a,{href:"/docs/design/services/rekuest",children:"rekuest"})," to add support for other message\nbrokers, and Kafka is on our list. If you are interested in this, please let us know in the ",(0,s.jsx)(t.a,{href:"https://discord.gg/arkitekt",children:"Discord"}),"!"]})]})}function c(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);
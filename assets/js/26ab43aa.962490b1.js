"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[7884],{48511:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>k,frontMatter:()=>s,metadata:()=>r,toc:()=>h});var i=a(85893),n=a(11151);a(15944);const s={title:"Why not Kafka?",sidebar_label:"Kafka?",sidebar_position:1},o=void 0,r={id:"design/why-not/kafka",title:"Why not Kafka?",description:"Why not Kafka?",source:"@site/docs/design/why-not/kafka.mdx",sourceDirName:"design/why-not",slug:"/design/why-not/kafka",permalink:"/docs/design/why-not/kafka",draft:!1,unlisted:!1,editUrl:"https://github.com/jhnnsrs/doks/edit/master/docs/design/why-not/kafka.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Why not Kafka?",sidebar_label:"Kafka?",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Why not...",permalink:"/docs/category/why-not"},next:{title:"Introduction",permalink:"/docs/design/why-not/intro"}},d={},h=[{value:"Why not Kafka?",id:"why-not-kafka",level:2},{value:"Kafka",id:"kafka",level:3}];function l(t){const e={admonition:"admonition",h2:"h2",h3:"h3",p:"p",...(0,n.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"why-not-kafka",children:"Why not Kafka?"}),"\n",(0,i.jsx)(e.p,{children:"Arkitekt aims to be a platform, that allows for real-time data processing. For this it neeeds a messaging system, and comes with RabbitMQ out of the box. But why not Kafka? Let's have a look at the differences between the two\nand why Arkitekt chose RabbitMQ."}),"\n",(0,i.jsx)(e.h3,{id:"kafka",children:"Kafka"}),"\n",(0,i.jsx)(e.p,{children:"Kafka is a distributed streaming platform, that is used for building real-time data pipelines and streaming apps. It is a distributed, partitioned, replicated commit log service. It provides the functionality of a messaging system, but with a unique design."}),"\n",(0,i.jsx)(e.p,{children:"...."}),"\n",(0,i.jsx)(e.admonition,{title:"Work in progress",type:"note",children:(0,i.jsx)(e.p,{children:"This section is still work in progress."})})]})}function k(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}}}]);
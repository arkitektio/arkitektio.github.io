"use strict";(self.webpackChunkdoks=self.webpackChunkdoks||[]).push([[1034],{49255:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=i(85893),o=i(11151);i(15944);const r={id:"index",title:"Deployment",sidebar_label:"Deployment",sidebar_position:2},a=void 0,s={id:"design/deployment/index",title:"Deployment",description:"Arkitekt aims to be highly costumizable in its deployment strategies, ranging from using Arkitekt on a single machine to deploying it on a cluster, the cloud, or even a hybrid of all.",source:"@site/docs/design/deployment/index.mdx",sourceDirName:"design/deployment",slug:"/design/deployment/",permalink:"/docs/design/deployment/",draft:!1,unlisted:!1,editUrl:"https://github.com/arkitektio/arkitektio.github.io/edit/master/docs/design/deployment/index.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"index",title:"Deployment",sidebar_label:"Deployment",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"API First",permalink:"/docs/design/api"},next:{title:"On Premise",permalink:"/docs/design/deployment/on_premise/"}},l={},d=[{value:"General Considerations",id:"general-considerations",level:2},{value:"How many users will use Arkitekt?",id:"how-many-users-will-use-arkitekt",level:3},{value:"How much data will be stored in Arkitekt?",id:"how-much-data-will-be-stored-in-arkitekt",level:3},{value:"How much data will be streamed through Arkitekt?",id:"how-much-data-will-be-streamed-through-arkitekt",level:3},{value:"How much computational power will be required?",id:"how-much-computational-power-will-be-required",level:3},{value:"Deployment Strategies",id:"deployment-strategies",level:2}];function h(e){const t={a:"a",admonition:"admonition",h2:"h2",h3:"h3",p:"p",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Arkitekt aims to be highly costumizable in its deployment strategies, ranging from using Arkitekt on a single machine to deploying it on a cluster, the cloud, or even a hybrid of all.\nThis document aims to give an overview of the different deployment strategies and their advantages and disadvantages.\nThis document is not meant to be a step-by-step guide on how to deploy Arkitekt, but rather a high-level overview of the different strategies.\nBeginners setting up arkitekt should follow the ",(0,n.jsx)(t.a,{href:"/docs/introduction/installation",children:"first steps guide"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"general-considerations",children:"General Considerations"}),"\n",(0,n.jsx)(t.p,{children:"Before we dive into the different deployment strategies, we want to give you some general considerations, that you should keep in mind when deploying Arkitekt."}),"\n",(0,n.jsx)(t.admonition,{title:"On the production readiness of Arkitekt",type:"warning",children:(0,n.jsx)(t.p,{children:"Arkitekt is currently in an early stage of development, and we are still working on making it production ready. Right now we can\nonly discourage you from using Arkitekt in a multipe user environment, as we are still working on making it secure and scalable.\nIf you are interested in using Arkitekt in a multiple user environment, please contact us, as we would like to know how you are using Arkitekt.\nThe following considerations are meant to give you an idea of what you should consider when deploying Arkitekt in a multiple user environment."})}),"\n",(0,n.jsx)(t.h3,{id:"how-many-users-will-use-arkitekt",children:"How many users will use Arkitekt?"}),"\n",(0,n.jsx)(t.p,{children:"The first thing you should consider when deploying Arkitekt is how many users will use Arkitekt.\nIf you are the only user of Arkitekt, you can deploy Arkitekt on a single machine, and you don't need to worry about redundancy or scalability.\nThe same holds true if your team is small, and lets be honest, anything below 20 people.\nIf you have a larger team, or if you want to make Arkitekt available to the public, you should consider deploying Arkitekt on a cluster, or in the cloud, please\ncontact us because we would like to know how you are using Arkitekt."}),"\n",(0,n.jsx)(t.h3,{id:"how-much-data-will-be-stored-in-arkitekt",children:"How much data will be stored in Arkitekt?"}),"\n",(0,n.jsxs)(t.p,{children:["Another thing you should consider when deploying Arkitekt is how much data you will store in Arkitekt. Through its reliance on Minio Arkitekt has support\nfor multiple storage providers and you can establish highly involved storage strategies like ",(0,n.jsx)(t.a,{href:"https://min.io/product/automated-data-tiering-lifecycle-management",children:"tiering"}),'.\nMost likely you will want to use a combination of "hot" and "cold" storage, where "hot" storage is fast and expensive, and "cold" storage is slow and cheap.\nPlease refer to the ',(0,n.jsx)(t.a,{href:"/docs/design/services/mikro#storage",children:"Mikro documentation"})," for more information on how to configure storage for the Mikro service."]}),"\n",(0,n.jsx)(t.h3,{id:"how-much-data-will-be-streamed-through-arkitekt",children:"How much data will be streamed through Arkitekt?"}),"\n",(0,n.jsx)(t.p,{children:'This is another thing you should consider when deploying Arkitekt. If you are planning to stream a lot of data to and from Arkitekt,\nyou should consider having a fast network connection, and a lot of bandwidth, as well as a lot of fast storage. Our showcases all\nwere possible with a 1Gbit/s connection, but this might not be enough for your use case. The truly mission critical part of the platform\nis again "minio", as it stores all the data that is streamed through Arkitekt. In rare cases you might be limited by the speed of the\nAPI layer, but this is not very likely for smaller team sizes.'}),"\n",(0,n.jsx)(t.h3,{id:"how-much-computational-power-will-be-required",children:"How much computational power will be required?"}),"\n",(0,n.jsx)(t.p,{children:'This is another thing you should consider when deploying Arkitekt. While for the most part "computation" is happening on the client side in the Arkitekt Apps,\nif you are deploying Plugin Apps on the Arkitekt Server (and your underlying docker host), you should consider the computational power required to run these plugins.'}),"\n",(0,n.jsx)(t.admonition,{title:"On Plugin Apps and GPU Support",type:"note",children:(0,n.jsx)(t.p,{children:"Currently we only have limited support for sharing GPUs with Plugin Apps, and we are planning to improve this in the future. Especially with the new\nKabinet service, we are planning to provide better support for GPU sharing. If your are interested in running multiple GPU intenstive Plugin Apps\non Arkitekt, please make sure that you have enough GPUs available."})}),"\n",(0,n.jsx)(t.h2,{id:"deployment-strategies",children:"Deployment Strategies"}),"\n",(0,n.jsx)(t.p,{children:"Arkitekt was build with the idea in mind that it should be highly customizable in its deployment strategies. This is why\nwe have built Arkitekt in a way that it can be used to maintain Arkitekt from within a python process (development),\nor as a local deveopment setup (through the CLI), via a GUI installer"})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);